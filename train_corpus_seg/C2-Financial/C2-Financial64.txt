说起 “ 算法 ” ， 很多 人 的 第一 反应 是 计算机程序 。 没错 ， 算法 是 计算机 不可或缺 的 一部分 。 计算机专业 的 本科生 大都 上 过 一门 课 《 数据结构 与 算法 》 （ DataStructureandAlgorithms ） ， 或者 有时候 数据结构 和 算法 是 分 做 两门课 的 ， 虽然 这 两件事 几乎 不可分割 ， 比如 针对 大量 数据 的 搜索 和 排序 之类 的 算法 。 我 自己 虽非 纯正 的 计算机专业 出身 ， 但 也 一度 对 研究 算法 很 痴迷 ， 直到 很 冲动 地买 了 一套 诺斯 的 名著 《 计算机程序 的 艺术 》 （ TheArtofComputerProgramming ） ， 待 拿到 书一看 ， 顿时 有种 以 大学 英语 四级 水平 去 读 原版 《 尤利西斯 》 的 感觉 。 
 
 
 
 
 
 
 在 计算机 内部 ， 算法 确实 无处不在 ， 比如 算法 决定 了 CPU 如何 在 多任务 间 分配 处理 时间 和 内存 等 其他 资源 ， 而 操作系统 和 应用程序 中 也 包含 了 极 多 的 算法 。 多年 前 我 曾经 写过 一个 天燃气 期货 不同 期限 合约 间 的 套利 和 对冲 的 自动 交易 算法 ， 其 复杂程度 超过 我 之前 写过 的 任何 东西 ， 对于 我 的 伤害 之深 以至于 我 现在 还 不时 梦见 当时 交易 主管 狞笑 的 脸 。 
 
 
 
 
 
 
 但 另一方面 ， 算法 其实 在 我们 的 生活 和 周遭 世界 中 也 无所不在 。 算法 ， 简单 了 说 ， 就是 一系列 步骤 的 总和 ， 告诉 我们 如何 完成 一件 任务 。 这样一来 ， 我们 烹饪 的 菜谱 就是 一个 算法 ； 我们 每天 工作 的 日程安排 也 可以 看作 是 一个 算法 ； 每当 计划 做 任何 一件 事时 ， 我们 的 思维 中 就 形成 了 一个 算法 。 甚至 ， 我们 自身 就是 算法 的 结果 ： 我们 的 身体 归根到底 是 由 基因 决定 的 ， 而 基因 是 产生 一条 多肽链 或 功能 RNA 所 需 的 全部 核苷酸 序列 。 不同 种 的 生物 有着 相异 的 基因 序列 或者 编码 ， 大自然 以 自己 的 算法 决定 了 我们 的 种族 、 孕育 、 生长 和 凋亡 。 
 
 
 
 
 
 
 
 
 
 
 
 由于 算法 无处不在 ， 有意识 地 借鉴 算法 思维 对 我们 生活 中 的 决策 很 有 帮助 。 对 日常生活 有 直接 指导意义 的 算法 很多 ， 比如 等待 、 排序 、 储存 、 安排 、 随机 和 博弈 等 。 这 其中 ， 有 一类 算法 我们 平时 遇到 的 比较 多 也 非常 有趣 ， 叫做 “ 最佳 终止 ” （ OptimumStopping ） 算法 。 
 
 
 
 
 
 
 问题 的 提出 是 这样 的 。 想象 一个 场景 ， 你 在 玩 一种 类似 天朝 电视台 的 “ 开门 大吉 ” 的 节目 ， 每过 一关 （ 听 15 秒钟 的 音乐 后 准确 报出 歌名 ） 你 会 得到 一定 的 奖励 ， 在 每 一关 你 都 面临 两个 选择 ： 是 停下来 到此为止 还是 继续 闯关 。 如果 停下来 ， 你 会 保住 到 目前 的 胜利果实 ， 但 失去 了 赚 更 多 钱 的 机会 ， 也许 下 一首 曲子 很 简单 呢 ？ 但 如果 选择 继续 ， 你 有 可能 答错 并 失去 一切 。 所以 ， 你 如何 做 理性 的 判断 ？ 这 和 好莱坞 电影 中 的 老套 场景 很 像 。 一位 江洋大盗 已经 金盆洗手 退隐 山林 了 ， 这时 总有 一位 朋友 适时地 带来 一个 消息 ： 发哥 ， 有 笔大 生意 绝不 容错过 ， 再 干 一票 吧 ！ 虽然 电影 中 的 发哥 总是 在 纠结 一番 之后 重新 披挂上阵 （ 要 不 电影 怎么 编下去 ？ ） ， 但 现实 中 如果 你 是 发哥 你 会 做出 怎样 的 明智 选择 ？ 
 
 
 
 
 
 
 考虑 更 接地 气 的 场景 。 你 ， 一位 初创 公司 的 老板 ， 准备 招聘 一位 秘书 ， 要求 是 手脚 麻利 、 能干 且 电脑操作 熟练 。 但 你 之前 没有 招聘 秘书 的 经验 ， 所以 开始 的 时候 你 会 多 看 几位 候选人 。 那么 问题 是 ， 在 什么 时候 你 该 终止 搜寻 并 签发 offer ? 或者 ， 你 打算 在 一个 陌生 的 城市 住 下来 ， 首要 的 任务 是 找 住 的 地方 。 你 需要 搜寻 多久 才 会 确定 你 现在 看 的 房子 就是 你 想要 的 ？ 或者 ， 你 初入 职场 ， 你 打算 面试 多少 份 职位 才能 确认 你 能 找到 的 理想 职位 是 什么 ？ 再 或者 ， 你 开车 去 一个 拥挤 而 热闹 的 地方 ， 比如 球场 或者 音乐会 ， 你 知道 要 找到 一个 停车 的 位子 很难 ， 那 在 距离 目的地 多远 的 地方 你 就 该 把 车 停下来 ？ 离得 太近 几乎 肯定 找 不到 车位 ， 但 离得 太远 又 需 下车 后 步行 很 长时间 。 这类 的 问题 ， 在 数学 上 笼统 地 被称作 经典 的 “ 找 秘书 ” 问题 。 
 
 
 
 
 
 
 
 
 
 
 
 先说 说 作为 发哥 的 你 是否 该 出山 吧 。 你 很 清楚 ， 每次 作案 的 时候 ， 你 都 面临 两种 后果 ： 要么 获利 要么 被 警察 抓住 。 如果 你 技艺高超 不同于 常人 ， 每次 行动 你 有 90% 的 可能性 逃脱 ， 10% 的 可能性 被 抓捕归案 ， 那么 理智 地说 ， 你 应该 在 作案 90% / 10% = 9 次 之后 就 收手 不 干 了 。 也就是说 ， 如果 你 遵循 “ 最佳 终止 ” 算法 的 指导 ， 你 在 金盘 洗手 之后 永远 都 不该 再 去 干下 一票 。 另一方面 ， 如果 你 的 水平 有限 ， 只有 50% 的 概率 逃脱 （ 说明 你 不 适合 做 这行 ） ， 那么 你 只 应该 干 一次 试试 你 的 手气 ， 如果 没有 失手 ， 那 就 立刻 考虑 往 别的 方向 发展 吧 。   
 
 
 
 
 
 
 下面 来 看看 “ 找 秘书 ” 的 问题 。 这里 我们 有 两个 并 不算 严格 的 假设 。 第一 ， 如果 你 面试 了 某位 候选人 而 决定 不 雇 她 的话 ， 之后 她 就 不 在 你 的 考虑 范围 之内 了 ， 即 不能 回溯 。 第二 ， 如果 你 决定 雇 某位 获 选人 ， 她 会 立刻 接受 这份 工作 ， 寻找 也 就 立刻 终止 。 每次 面试 一位 候选人 ， 你 面临 两个 选择 ： 雇 她 或者 不雇 。 因为 你 的 目的 是从 所有 的 候选人 中 挑出 最佳 的 那位 ， 所以 如果 你 决定 留下 目前 的 这位 ， 那么 你 可能 错失 更好 的 ， 因为 你 还 没有 机会 见到 她 ； 但 如果 你 不 留下 当前 的 这位 ， 那么 风险 当然 是 她 确实 是 最好 的 但 你 犯 了 一个 错误 。 
 
 
 
 
 
 
 这 当然 跟 候选人 数 有关 。 我们 先 从 最 简单 的 开始 。 现在 假设 只有 1 位 候选人 ， 那么 你 没有 选择 只能 雇 她 。 如果 有 2 位 ， 合理 的 做法 是 先 面试 第一位 ， 然后 雇 第二位 ， 这种 情形 下 你 能 找到 最佳 候选人 的 概率 是 50% 。 如果 有 3 位 候选人 ， 情况 略微 复杂 ， 但 这时 最好 的 策略 是 先 面试 第一位 ， 然后 考察 后面 的 两位 ， 并 留下 好于 第一位 候选人 的 那位 。 也就是说 ， 考察 第一位 为 你 建立 了 一个 挑选 的 标准 ， 即 在 约 1 / 3 的 位置 上 停止 搜索 ， 然后 把 工作 给 下 一位 高于 标准 的 候选人 。 在 这种 算法 下 ， 你 能 找到 最佳 候选人 的 概率 是 50% ， 好过 随机 挑选 的 33% 的 概率 。 （ 具体来说 ， 成功 的 情形 是 2 - 1 - 3 、 2 - 3 - 1 和 3 - 1 - 2 ， 过度 挑选 的 情形 是 1 - 2 - 3 和 1 - 3 - 2 ， 而 挑选 不够 的 情形 是 3 - 2 - 1 ） 。 随着 候选人 数 的 增加 ， 如果 使用 相同 的 算法 ， 我们 就 会 发现 最佳 的 终止 位置 收敛 到 37% ， 并且 已经 在 数学 上 被 严格 证明 。 
 
 
 
 
 
 
 
 
 
 
 
 这 就是 所谓 的 “ 37% ” 法则 。 在 应用 的 时候 ， 这个 数字 大概 是 在 35% ~ 40% 之间 ， 在 空间 或者 时间 上 都 适用 。 例如 ， 假设 你 目前 18 岁 ， 正在 寻找 一生 的 伴侣 ， 并 打算 在 30 岁 之前 结婚 。 那么 根据 这个 法则 ， 你 可以 在 ( 30 - 18 ) * 0.37 + 18 = 22.4 岁 之前 尽管 约会 ， 在 那 之后 如果 遇见 了 心仪 的 人 就 立刻 向 她 / 他 求婚 吧 ， 因为 这样 可以 最大化 实现 你 的 目标 （ 30 岁 之前 结婚 + 找到 最佳 人生 伴侣 ） 的 可能性 。   
 当然 ， 上面 的 描述 还是 做 了 很多 简化 的 ， 现实 中 往往 更 复杂 ： 就算 你 找到 了 满意 的 候选人 ， 她 也 可能 拒绝 这份 工作 ； 或者 过 了 一段时间 ， 你 发现 之前 的 某位 候选人 其实 更令 你 满意 ， 即 有 回溯 机制 ； 这里 也 没有 考虑 搜索 的 时间 成本 ， 也 忽略 了 搜索 者 的 心理因素 （ 比如 ， 搜索 到 了 一定 时间 之后 ， 你 会 感到 疲惫 ， 想 尽快 结束 这个 任务 ） 。 另外 ， 如果 有 之前 的 经验 做 参考 ， 或者 有 某些 量化 的 指标 （ 比如 候选人 是否 读过 名牌大学 ， 某项 考试 的 成绩 是否 优秀 ） ， 更 完备 的 信息 都 会 在 某种程度 上 改变 上面 的 结论 。 有 兴趣 的话 ， 可以 参看 相关 的 论文 。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 算法 在 金融交易 和 投资 上 的 应用 早就 是 老生常谈 了 ， 所以 有 “ 算法 交易 ” （ AlgorithmicTrading ） 这个 名词 ， 比如 大名鼎鼎 的 文艺复兴 基金 常年 靠 自己 特有 的 算法 在 市场 上大 赚 特 赚 。 其实 就算 不用 写 程序 做 算法 交易 ， 每位 投资者 的 投资决策 过程 就是 一项 算法 ， 不管 是 基于 基本面 的 企业 盈利 ， 还是 基于 技术 面 的 均线 排列 。   
 不用说 ， 我们 目前 处于 人工智能 大 发展 的 前夜 ， 而 根据 我 的 理解 ， 未来 很长 一段时间 内 的 人工智能 就是 算法 + 大 数据 ， 前不久 谷歌 旗下 子公司 DeepMind 开发 的 AlphaGoZero 的 惊人 表现 更 彰显 出 算法 的 重要性 。 人类 最早 的 算法 据说 是 在 巴格达 发现 的 距今 4000 多年 前 的 一块 苏美尔 人 的 泥板 ， 上面 刻着 如何 做大 位数 相除 的 步骤 。 在 人类文明 几千年 的 进步 之后 ， 《 算法 帝国 》 的 作者 斯坦纳 写道 ： “ 算法 涉足 的 领域 已经 远远 超出 了 其 创造者 的 预期 。 特别 是 进入 信息时代 以后 ， 算法 的 应用 涵盖 金融 、 医疗 、 法律 、 体育 、 娱乐 、 外交 、 文化 、 国家 安全 等 诸多方面 ， 显现出 源于 人类 而 又 超乎 人类 的 强大 威力 。 ” 
 
 
 
 
 
 
 
 
 
 
 
 据说 在 AI 时代 的 人 都 应该 时常 考虑 一个 问题 ： 你 什么 时候 被 机器 取代 ？ 在 德州 牌 桌上 ， 如果 你 想 战胜 对手 ， 就要 设法 洞察 对手 的 心理 和 思路 ； 在 AI 时代 ， 如果 想要 和 机器 对抗 ， 了解 机器 的 核心 — 算法 — 大概 是 很 有 必要 的 。 不多 说 了 ， 待 我 回去 找出 算法 和 数据结构 的 教科书 再 从头 看一遍 。 
 
 
 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 如果 您 有 优质 的 、 符合 见闻 调性 的 原创 文章 ， 欢迎 以 个人 的 名义 投稿 入驻 华尔街 见闻 名家 专栏 。 
 投稿 方式 ： 请 将 个人简介 以及 代表作品 发送至 zhuanlan @ wallstreetcn . com ， 并 附上 电话 和 微信 以便 做 进一步 沟通 ， 在 主题 中 标明 : 申请 入驻 见闻 专栏 + 投稿人 名字